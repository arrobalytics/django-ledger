# Generated by Django 4.0.4 on 2022-04-30 17:45

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import django_ledger.models.estimate


class Migration(migrations.Migration):
    dependencies = [
        ('django_ledger', '0008_auto_20211204_1959'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerEstimateModel',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('markdown_notes', models.TextField(blank=True, null=True, verbose_name='Markdown Notes')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('estimate_number',
                 models.SlugField(default=django_ledger.models.estimate.generate_estimate_number, max_length=20,
                                  verbose_name='Estimate Number')),
                ('terms', models.CharField(
                    choices=[('fixed', 'Fixed Price'), ('target', 'Target Price'), ('t&m', 'Time & Materials'),
                             ('other', 'Other')], max_length=10, verbose_name='Contract Terms')),
                ('title', models.CharField(max_length=250, validators=[
                    django.core.validators.MinLengthValidator(limit_value=5,
                                                              message='PO Title length must be greater than 5')],
                                           verbose_name='Customer Estimate Title')),
                ('status', models.CharField(
                    choices=[('draft', 'Draft'), ('in_review', 'In Review'), ('approved', 'Approved'),
                             ('completed', 'Completed'), ('canceled', 'Canceled')], default='draft', max_length=10,
                    verbose_name='Customer Estimate Status')),
                ('date_approved', models.DateField(blank=True, null=True, verbose_name='Date Approved')),
                ('date_completed', models.DateField(blank=True, null=True, verbose_name='Date Completed')),
                ('date_canceled', models.DateField(blank=True, null=True, verbose_name='Date Canceled')),
                ('revenue_estimate', models.DecimalField(decimal_places=2, default=Decimal('0.00'),
                                                         help_text='Estimated cost to complete the quoted work.',
                                                         max_digits=20,
                                                         validators=[django.core.validators.MinValueValidator(0)],
                                                         verbose_name='Total revenue estimate')),
                ('labor_estimate', models.DecimalField(decimal_places=2, default=Decimal('0.00'),
                                                       help_text='Estimated labor cost to complete the quoted work.',
                                                       max_digits=20,
                                                       validators=[django.core.validators.MinValueValidator(0)],
                                                       verbose_name='Labor Cost of labor estimate')),
                ('material_estimate', models.DecimalField(decimal_places=2, default=0.0,
                                                          help_text='Estimated material cost to complete the quoted work.',
                                                          max_digits=20,
                                                          validators=[django.core.validators.MinValueValidator(0)],
                                                          verbose_name='Material Cost Estimate')),
                ('equipment_estimate', models.DecimalField(decimal_places=2, default=Decimal('0.00'),
                                                           help_text='Estimated equipment cost to complete the quoted work.',
                                                           max_digits=20,
                                                           validators=[django.core.validators.MinValueValidator(0)],
                                                           verbose_name='Equipment Cost Estimate')),
                ('other_estimate', models.DecimalField(decimal_places=2, default=Decimal('0.00'),
                                                       help_text='Estimated equipment cost to complete the quoted work.',
                                                       max_digits=20,
                                                       validators=[django.core.validators.MinValueValidator(0)],
                                                       verbose_name='Other Cost Estimate')),
            ],
            options={
                'verbose_name': 'Customer Job',
                'verbose_name_plural': 'Customer Jobs',
                'ordering': ['-updated'],
            },
        ),
        migrations.AddField(
            model_name='itemmodel',
            name='item_type',
            field=models.CharField(blank=True,
                                   choices=[('L', 'Labor'), ('M', 'Material'), ('E', 'Equipment'), ('S', 'Lump Sum'),
                                            ('O', 'Other')], max_length=1, null=True),
        ),
        migrations.AddField(
            model_name='itemthroughmodel',
            name='ce_revenue_estimate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True,
                                      validators=[django.core.validators.MinValueValidator(0)],
                                      verbose_name='Total customer estimate revenue.'),
        ),
        migrations.AddField(
            model_name='itemthroughmodel',
            name='ce_unit_revenue_estimate',
            field=models.FloatField(blank=True, default=0.0, null=True,
                                    validators=[django.core.validators.MinValueValidator(0)],
                                    verbose_name='Customer Estimate Revenue per Unit.'),
        ),
        migrations.AlterField(
            model_name='accountmodel',
            name='coa',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='accounts', to='django_ledger.chartofaccountmodel',
                                    verbose_name='Chart of Accounts'),
        ),
        migrations.AlterField(
            model_name='bankaccountmodel',
            name='ledger',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                       to='django_ledger.ledgermodel', verbose_name='Ledger'),
        ),
        migrations.AlterField(
            model_name='billmodel',
            name='cash_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='None_cash_account', to='django_ledger.accountmodel',
                                    verbose_name='Cash Account'),
        ),
        migrations.AlterField(
            model_name='billmodel',
            name='ledger',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                       to='django_ledger.ledgermodel', verbose_name='Ledger'),
        ),
        migrations.AlterField(
            model_name='billmodel',
            name='prepaid_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='None_prepaid_account', to='django_ledger.accountmodel',
                                    verbose_name='Prepaid Account'),
        ),
        migrations.AlterField(
            model_name='billmodel',
            name='unearned_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='None_unearned_account', to='django_ledger.accountmodel',
                                    verbose_name='Unearned Account'),
        ),
        migrations.AlterField(
            model_name='chartofaccountmodel',
            name='entity',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='coa',
                                       to='django_ledger.entitymodel', verbose_name='Entity'),
        ),
        migrations.AlterField(
            model_name='chartofaccountmodel',
            name='slug',
            field=models.SlugField(editable=False, unique=True, validators=[
                django.core.validators.MinLengthValidator(limit_value=10,
                                                          message='Slug field must contain at least 10 characters.')]),
        ),
        migrations.AlterField(
            model_name='customermodel',
            name='entity',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='customers', to='django_ledger.entitymodel',
                                    verbose_name='Customer Entity'),
        ),
        migrations.AlterField(
            model_name='entitymodel',
            name='slug',
            field=models.SlugField(editable=False, unique=True, validators=[
                django.core.validators.MinLengthValidator(limit_value=10,
                                                          message='Slug field must contain at least 10 characters.')]),
        ),
        migrations.AlterField(
            model_name='entityunitmodel',
            name='entity',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                    to='django_ledger.entitymodel', verbose_name='Unit Entity'),
        ),
        migrations.AlterField(
            model_name='importjobmodel',
            name='ledger',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                    to='django_ledger.ledgermodel', verbose_name='Ledger'),
        ),
        migrations.AlterField(
            model_name='invoicemodel',
            name='cash_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='invoice_cash_account',
                                    to='django_ledger.accountmodel', verbose_name='Cash Account'),
        ),
        migrations.AlterField(
            model_name='invoicemodel',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='django_ledger.customermodel',
                                    verbose_name='Customer'),
        ),
        migrations.AlterField(
            model_name='invoicemodel',
            name='ledger',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                       to='django_ledger.ledgermodel', verbose_name='Ledger'),
        ),
        migrations.AlterField(
            model_name='invoicemodel',
            name='prepaid_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='invoice_prepaid_account', to='django_ledger.accountmodel',
                                    verbose_name='Prepaid Account'),
        ),
        migrations.AlterField(
            model_name='invoicemodel',
            name='unearned_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='invoice_unearned_account', to='django_ledger.accountmodel',
                                    verbose_name='Unearned Account'),
        ),
        migrations.AlterField(
            model_name='itemmodel',
            name='cogs_account',
            field=models.ForeignKey(blank=True,
                                    help_text='COGS account where cost will be recognized on Income Statement.',
                                    null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='item_cogs_account', to='django_ledger.accountmodel',
                                    verbose_name='COGS Account'),
        ),
        migrations.AlterField(
            model_name='itemmodel',
            name='earnings_account',
            field=models.ForeignKey(blank=True,
                                    help_text='Earnings account where revenue will be recognized on Income Statement.',
                                    null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='item_earnings_account', to='django_ledger.accountmodel',
                                    verbose_name='Earnings Account'),
        ),
        migrations.AlterField(
            model_name='itemmodel',
            name='expense_account',
            field=models.ForeignKey(blank=True,
                                    help_text='Expense account where cost will be recognized on Income Statement.',
                                    null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='item_expense_account', to='django_ledger.accountmodel',
                                    verbose_name='Expense Account'),
        ),
        migrations.AlterField(
            model_name='itemmodel',
            name='inventory_account',
            field=models.ForeignKey(blank=True, help_text='Inventory account where cost will be capitalized.',
                                    null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    related_name='item_inventory_account', to='django_ledger.accountmodel',
                                    verbose_name='Inventory Account'),
        ),
        migrations.AlterField(
            model_name='itemmodel',
            name='uom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='django_ledger.unitofmeasuremodel',
                                    verbose_name='Unit of Measure'),
        ),
        migrations.AlterField(
            model_name='itemthroughmodel',
            name='bill_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    to='django_ledger.billmodel', verbose_name='Bill Model'),
        ),
        migrations.AlterField(
            model_name='itemthroughmodel',
            name='entity_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    to='django_ledger.entityunitmodel', verbose_name='Associated Entity Unit'),
        ),
        migrations.AlterField(
            model_name='itemthroughmodel',
            name='invoice_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    to='django_ledger.invoicemodel', verbose_name='Invoice Model'),
        ),
        migrations.AlterField(
            model_name='itemthroughmodel',
            name='po_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    to='django_ledger.purchaseordermodel', verbose_name='Purchase Order Model'),
        ),
        migrations.AlterField(
            model_name='itemthroughmodel',
            name='po_unit_cost',
            field=models.FloatField(blank=True, default=0.0, help_text='Purchase Order unit cost.', null=True,
                                    validators=[django.core.validators.MinValueValidator(0)],
                                    verbose_name='PO Unit Cost'),
        ),
        migrations.AlterField(
            model_name='journalentrymodel',
            name='entity_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    to='django_ledger.entityunitmodel', verbose_name='Associated Entity Unit'),
        ),
        migrations.AlterField(
            model_name='ledgermodel',
            name='entity',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                    to='django_ledger.entitymodel', verbose_name='Ledger Entity'),
        ),
        migrations.AlterField(
            model_name='transactionmodel',
            name='account',
            field=models.ForeignKey(help_text='Account from Chart of Accounts to be associated with this transaction.',
                                    on_delete=django.db.models.deletion.PROTECT, related_name='txs',
                                    to='django_ledger.accountmodel', verbose_name='Account'),
        ),
        migrations.AlterField(
            model_name='transactionmodel',
            name='journal_entry',
            field=models.ForeignKey(editable=False, help_text='Journal Entry to be associated with this transaction.',
                                    on_delete=django.db.models.deletion.PROTECT, related_name='txs',
                                    to='django_ledger.journalentrymodel', verbose_name='Journal Entry'),
        ),
        migrations.AddField(
            model_name='itemthroughmodel',
            name='ce_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    to='django_ledger.customerestimatemodel', verbose_name='Customer Estimate'),
        ),
        migrations.AddIndex(
            model_name='itemmodel',
            index=models.Index(fields=['item_type'], name='django_ledg_item_ty_0cef58_idx'),
        ),
        migrations.AddIndex(
            model_name='itemthroughmodel',
            index=models.Index(fields=['ce_model', 'item_model'], name='django_ledg_ce_mode_3eb7c2_idx'),
        ),
        migrations.AddField(
            model_name='customerestimatemodel',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='django_ledger.customermodel',
                                    verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='customerestimatemodel',
            name='entity',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                    to='django_ledger.entitymodel', verbose_name='Entity Model'),
        ),
        migrations.AddField(
            model_name='purchaseordermodel',
            name='ce_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT,
                                    to='django_ledger.customerestimatemodel',
                                    verbose_name='Associated Customer Job/Estimate'),
        ),
        migrations.AddIndex(
            model_name='customerestimatemodel',
            index=models.Index(fields=['status'], name='django_ledg_status_3c98b8_idx'),
        ),
        migrations.AddIndex(
            model_name='customerestimatemodel',
            index=models.Index(fields=['date_approved'], name='django_ledg_date_ap_01f2ef_idx'),
        ),
        migrations.AddIndex(
            model_name='customerestimatemodel',
            index=models.Index(fields=['date_completed'], name='django_ledg_date_co_092c43_idx'),
        ),
        migrations.AddIndex(
            model_name='customerestimatemodel',
            index=models.Index(fields=['entity', 'estimate_number'], name='django_ledg_entity__3090a8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customerestimatemodel',
            unique_together={('entity', 'estimate_number')},
        ),
    ]
